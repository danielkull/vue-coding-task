{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelCheckbox as _vModelCheckbox } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Email:\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Password:\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Role:\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"developer\"\n}, \"Web Developer\", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"desginer\"\n}, \"Web Desginer\", -1 /* HOISTED */);\nconst _hoisted_6 = [_hoisted_4, _hoisted_5];\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Skills:\", -1 /* HOISTED */);\nconst _hoisted_8 = {\n  class: \"terms\"\n};\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Accepts Terms and conditions\", -1 /* HOISTED */);\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"submit\"\n}, [/*#__PURE__*/_createElementVNode(\"button\", null, \"Create an Account\")], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"form\", {\n    onSubmit: _cache[7] || (_cache[7] = _withModifiers((...args) => _ctx.handleSubmit && _ctx.handleSubmit(...args), [\"prevent\"]))\n  }, [_hoisted_1, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.email = $event),\n    type: \"email\",\n    autocomplete: \"email\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.email]]), _hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.password = $event),\n    type: \"password\",\n    autocomplete: \"current-password\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.password]]), _hoisted_3, _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.role = $event)\n  }, _hoisted_6, 512 /* NEED_PATCH */), [[_vModelSelect, _ctx.role]]), _hoisted_7, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.tempSkill = $event),\n    type: \"text\",\n    onKeyup: _cache[4] || (_cache[4] = _withModifiers((...args) => _ctx.addSkill && _ctx.addSkill(...args), [\"alt\"]))\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, _ctx.tempSkill]]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.skills, skill => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: skill,\n      class: \"pill\"\n    }, [_createElementVNode(\"p\", {\n      onClick: _cache[5] || (_cache[5] = (...args) => _ctx.removeSkill && _ctx.removeSkill(...args))\n    }, _toDisplayString(skill), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"div\", _hoisted_8, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => _ctx.terms = $event),\n    type: \"checkbox\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, _ctx.terms]]), _hoisted_9]), _hoisted_10], 32 /* HYDRATE_EVENTS */), _createElementVNode(\"p\", null, \"Email: \" + _toDisplayString(_ctx.email), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Password: \" + _toDisplayString(_ctx.password), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Role: \" + _toDisplayString(_ctx.role), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Terms accepted: \" + _toDisplayString(_ctx.terms), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","value","_hoisted_4","_hoisted_5","class","onSubmit","_cache","_withModifiers","args","_ctx","handleSubmit","_hoisted_1","email","$event","type","autocomplete","required","_hoisted_2","password","_hoisted_3","role","_hoisted_7","tempSkill","onKeyup","addSkill","_createElementBlock","_Fragment","_renderList","skills","skill","key","onClick","removeSkill","_hoisted_8","terms","_hoisted_9","_hoisted_10","_toDisplayString"],"sources":["C:\\Users\\Eyash\\coding-projects\\vue-coding-task\\net-ninja-tutorials\\web-form\\src\\components\\SignupForm.vue"],"sourcesContent":["<template>\n  <form @submit.prevent=\"handleSubmit\">\n    <label>Email:</label>\n    <input v-model=\"email\" type=\"email\" autocomplete=\"email\" required />\n    <label>Password:</label>\n    <input\n      v-model=\"password\"\n      type=\"password\"\n      autocomplete=\"current-password\"\n      required\n    />\n\n    <label>Role:</label>\n    <select v-model=\"role\">\n      <option value=\"developer\">Web Developer</option>\n      <option value=\"desginer\">Web Desginer</option>\n    </select>\n\n    <label>Skills:</label>\n    <input v-model=\"tempSkill\" type=\"text\" @keyup.alt=\"addSkill\" />\n    <div v-for=\"skill in skills\" :key=\"skill\" class=\"pill\">\n      <p @click=\"removeSkill\">{{ skill }}</p>\n    </div>\n\n    <div class=\"terms\">\n      <input v-model=\"terms\" type=\"checkbox\" required />\n      <label>Accepts Terms and conditions</label>\n    </div>\n\n    <div class=\"submit\">\n      <button>Create an Account</button>\n    </div>\n  </form>\n  <p>Email: {{ email }}</p>\n  <p>Password: {{ password }}</p>\n  <p>Role: {{ role }}</p>\n  <p>Terms accepted: {{ terms }}</p>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      email: \"\",\n      password: \"\",\n      role: \"desginer\",\n      terms: false,\n      tempSkill: \"\",\n      skills: [\"HTML\", \"Vue\", \"Css\", \"Js\"],\n      passwordError: \"\",\n    };\n  },\n  methods: {\n    addSkill(e) {\n      // Acceptans condition: , + alt and with text\n      if (e.key === \",\" && this.tempSkill) {\n        // Check if Skill already exists\n        if (!this.skills.includes(this.tempSkill)) {\n          this.skills.push(this.tempSkill);\n        }\n        this.tempSkill = \"\";\n      }\n    },\n    removeSkill(e) {\n      const skillToRemove = e.target.innerText;\n\n      this.skills = this.skills.filter((skill) => {\n        return skill !== skillToRemove;\n      });\n    },\n    handleSubmit() {\n      // validate password\n      this.passwordError = this.password.length > 5 ? '' : \n    },\n  },\n};\n</script>\n\n<style>\nform {\n  max-width: 420px;\n  margin: 30px auto;\n  background: white;\n  text-align: left;\n  padding: 40px;\n  border-radius: 10px;\n}\nlabel {\n  color: #aaa;\n  display: inline-block;\n  margin: 25px 0 15px;\n  font-size: 0.6em;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  font-weight: bold;\n}\ninput,\nselect {\n  display: block;\n  padding: 10px 6px;\n  width: 100%;\n  box-sizing: border-box;\n  border: none;\n\n  border-bottom: 1px solid #ddd;\n  color: #555;\n}\n\ninput[type=\"checkbox\"] {\n  display: inline-block;\n  width: 16px;\n  margin: 0 10px 0 0;\n  position: relative;\n  top: 2px;\n}\n\n.pill {\n  display: inline-block;\n  margin: 20px 10px 0 0;\n  padding: 6px 12px;\n  background: #eee;\n  border-radius: 20px;\n  font-size: 12px;\n  letter-spacing: 1px;\n  font-weight: bold;\n  color: #777;\n  cursor: pointer;\n}\n\nbutton {\n  background: #0b6dff;\n  border: 0;\n  padding: 10px 20px;\n  color: white;\n  border-radius: 20px;\n}\n\n.submit {\n  text-align: center;\n}\n</style>\n"],"mappings":";gCAEIA,mBAAA,CAAqB,eAAd,QAAM;gCAEbA,mBAAA,CAAwB,eAAjB,WAAS;gCAQhBA,mBAAA,CAAoB,eAAb,OAAK;gCAEVA,mBAAA,CAAgD;EAAxCC,KAAK,EAAC;AAAW,GAAC,eAAa;gCACvCD,mBAAA,CAA8C;EAAtCC,KAAK,EAAC;AAAU,GAAC,cAAY;oBADrCC,UAAgD,EAChDC,UAA8C,C;gCAGhDH,mBAAA,CAAsB,eAAf,SAAO;;EAMTI,KAAK,EAAC;AAAO;gCAEhBJ,mBAAA,CAA2C,eAApC,8BAA4B;iCAGrCA,mBAAA,CAEM;EAFDI,KAAK,EAAC;AAAQ,I,aACjBJ,mBAAA,CAAkC,gBAA1B,mBAAiB,E;;;6DA7B7BA,mBAAA,CA+BO;IA/BAK,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,IAAA,CAAAC,YAAA,IAAAD,IAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;MACjCG,UAAqB,E,gBACrBX,mBAAA,CAAoE;+DAApDS,IAAA,CAAAG,KAAK,GAAAC,MAAA;IAAEC,IAAI,EAAC,OAAO;IAACC,YAAY,EAAC,OAAO;IAACC,QAAQ,EAAR;iDAAzCP,IAAA,CAAAG,KAAK,E,GACrBK,UAAwB,E,gBACxBjB,mBAAA,CAKE;+DAJSS,IAAA,CAAAS,QAAQ,GAAAL,MAAA;IACjBC,IAAI,EAAC,UAAU;IACfC,YAAY,EAAC,kBAAkB;IAC/BC,QAAQ,EAAR;iDAHSP,IAAA,CAAAS,QAAQ,E,GAMnBC,UAAoB,E,gBACpBnB,mBAAA,CAGS;+DAHQS,IAAA,CAAAW,IAAI,GAAAP,MAAA;yDAAJJ,IAAA,CAAAW,IAAI,E,GAKrBC,UAAsB,E,gBACtBrB,mBAAA,CAA+D;+DAA/CS,IAAA,CAAAa,SAAS,GAAAT,MAAA;IAAEC,IAAI,EAAC,MAAM;IAAES,OAAK,EAAAjB,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAMC,IAAA,CAAAe,QAAA,IAAAf,IAAA,CAAAe,QAAA,IAAAhB,IAAA,CAAQ;iEAA3CC,IAAA,CAAAa,SAAS,E,sBACzBG,mBAAA,CAEMC,SAAA,QAAAC,WAAA,CAFelB,IAAA,CAAAmB,MAAM,EAAfC,KAAK;yBAAjBJ,mBAAA,CAEM;MAFwBK,GAAG,EAAED,KAAK;MAAEzB,KAAK,EAAC;QAC9CJ,mBAAA,CAAuC;MAAnC+B,OAAK,EAAAzB,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,IAAA,CAAAuB,WAAA,IAAAvB,IAAA,CAAAuB,WAAA,IAAAxB,IAAA,CAAW;wBAAKqB,KAAK,iB;kCAGlC7B,mBAAA,CAGM,OAHNiC,UAGM,G,gBAFJjC,mBAAA,CAAkD;+DAAlCS,IAAA,CAAAyB,KAAK,GAAArB,MAAA;IAAEC,IAAI,EAAC,UAAU;IAACE,QAAQ,EAAR;qDAAvBP,IAAA,CAAAyB,KAAK,E,GACrBC,UAA2C,C,GAG7CC,WAEM,C,4BAERpC,mBAAA,CAAyB,WAAtB,SAAO,GAAAqC,gBAAA,CAAG5B,IAAA,CAAAG,KAAK,kBAClBZ,mBAAA,CAA+B,WAA5B,YAAU,GAAAqC,gBAAA,CAAG5B,IAAA,CAAAS,QAAQ,kBACxBlB,mBAAA,CAAuB,WAApB,QAAM,GAAAqC,gBAAA,CAAG5B,IAAA,CAAAW,IAAI,kBAChBpB,mBAAA,CAAkC,WAA/B,kBAAgB,GAAAqC,gBAAA,CAAG5B,IAAA,CAAAyB,KAAK,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Ninja Reaction Timer\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ButtonComp = _resolveComponent(\"ButtonComp\");\n  const _component_ScoreScreen = _resolveComponent(\"ScoreScreen\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", null, [_createVNode(_component_ButtonComp, {\n    onClick: $options.startGame,\n    label: \"Play\"\n  }, null, 8 /* PROPS */, [\"onClick\"])]), _createElementVNode(\"div\", null, [$data.toggleReactionField ? (_openBlock(), _createBlock(_component_ButtonComp, {\n    key: 0,\n    label: \"click me\",\n    theme: \"reaction-field\",\n    onClick: $options.checkReaction\n  }, null, 8 /* PROPS */, [\"onClick\"])) : (_openBlock(), _createBlock(_component_ScoreScreen, {\n    key: 1,\n    message: $data.measuredTime,\n    evaluation: $options.evaluationMessage()\n  }, null, 8 /* PROPS */, [\"message\", \"evaluation\"]))])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_hoisted_1","_createVNode","_component_ButtonComp","onClick","$options","startGame","label","$data","toggleReactionField","_createBlock","theme","checkReaction","_component_ScoreScreen","message","measuredTime","evaluation","evaluationMessage"],"sources":["C:\\Users\\Eyash\\coding-projects\\vue-coding-task\\reaction-timer\\src\\App.vue"],"sourcesContent":["<template>\n  <h1>Ninja Reaction Timer</h1>\n  <div>\n    <ButtonComp @click=\"startGame\" label=\"Play\" />\n  </div>\n  <div>\n    <ButtonComp\n      v-if=\"toggleReactionField\"\n      label=\"click me\"\n      theme=\"reaction-field\"\n      @click=\"checkReaction\"\n    >\n    </ButtonComp>\n    <ScoreScreen\n      v-else\n      :message=\"measuredTime\"\n      :evaluation=\"evaluationMessage()\"\n    ></ScoreScreen>\n  </div>\n</template>\n\n<script>\nimport ButtonComp from \"@/components/ButtonComp.vue\";\nimport ScoreScreen from \"@/components/ScoreScreen.vue\";\n\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      toggleReactionField: false,\n      startTime: null,\n      endTime: null,\n      measuredTime: undefined,\n    };\n  },\n  methods: {\n    startGame() {\n      setTimeout(() => {\n        this.toggleReactionField = true;\n        this.startTime = Date.now();\n      }, 1000);\n    },\n    checkReaction() {\n      this.endTime = Date.now();\n      this.measuredTime = `Reaction Time: ${this.endTime - this.startTime} ms`;\n      this.toggleReactionField = false;\n    },\n    evaluationMessage() {\n      const time = this.endTime - this.startTime;\n      let result = \"\";\n      console.log(typeof time, time);\n/*       switch (time) {\n        case time > 1000:\n          result = \"Jupp\";\n          break;\n        case time < 1000:\n          result = \"nopp\";\n          break;\n      } */\n      \n      console.log(result);\n      return `What if ${result}`;\n    },\n  },\n  components: {\n    ButtonComp,\n    ScoreScreen,\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"],"mappings":";gCACEA,mBAAA,CAA6B,YAAzB,sBAAoB;;;;;6DAAxBC,UAA6B,EAC7BD,mBAAA,CAEM,cADJE,YAAA,CAA8CC,qBAAA;IAAjCC,OAAK,EAAEC,QAAA,CAAAC,SAAS;IAAEC,KAAK,EAAC;0CAEvCP,mBAAA,CAaM,cAXIQ,KAAA,CAAAC,mBAAmB,I,cAD3BC,YAAA,CAMaP,qBAAA;;IAJXI,KAAK,EAAC,UAAU;IAChBI,KAAK,EAAC,gBAAgB;IACrBP,OAAK,EAAEC,QAAA,CAAAO;yDAGVF,YAAA,CAIeG,sBAAA;;IAFZC,OAAO,EAAEN,KAAA,CAAAO,YAAY;IACrBC,UAAU,EAAEX,QAAA,CAAAY,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
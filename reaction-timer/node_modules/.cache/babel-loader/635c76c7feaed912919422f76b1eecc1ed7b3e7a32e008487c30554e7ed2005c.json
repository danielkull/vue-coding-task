{"ast":null,"code":"import ButtonComp from \"@/components/ButtonComp.vue\";\nimport ScoreScreen from \"@/components/ScoreScreen.vue\";\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      toggleReactionField: false,\n      startTime: null,\n      endTime: null,\n      measuredTime: undefined\n    };\n  },\n  methods: {\n    startGame() {\n      setTimeout(() => {\n        this.toggleReactionField = true;\n        this.startTime = Date.now();\n      }, 1000);\n    },\n    checkReaction() {\n      this.endTime = Date.now();\n      this.measuredTime = `Reaction Time: ${this.endTime - this.startTime} ms`;\n      this.toggleReactionField = false;\n    },\n    evaluationMessage() {\n      return \"snail\";\n    }\n  },\n  components: {\n    ButtonComp,\n    ScoreScreen\n  }\n};","map":{"version":3,"names":["ButtonComp","ScoreScreen","name","data","toggleReactionField","startTime","endTime","measuredTime","undefined","methods","startGame","setTimeout","Date","now","checkReaction","evaluationMessage","components"],"sources":["C:\\Users\\Eyash\\coding-projects\\vue-coding-task\\reaction-timer\\src\\App.vue"],"sourcesContent":["<template>\n  <h1>Ninja Reaction Timer</h1>\n  <div>\n    <ButtonComp @click=\"startGame\" label=\"Play\" />\n  </div>\n  <div>\n    <ButtonComp\n      v-if=\"toggleReactionField\"\n      label=\"click me\"\n      theme=\"reaction-field\"\n      @click=\"checkReaction\"\n    >\n    </ButtonComp>\n    <ScoreScreen\n      v-else\n      :message=\"measuredTime\"\n      :evaluation=\"evaluationMessage\"\n    ></ScoreScreen>\n  </div>\n</template>\n\n<script>\nimport ButtonComp from \"@/components/ButtonComp.vue\";\nimport ScoreScreen from \"@/components/ScoreScreen.vue\";\n\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      toggleReactionField: false,\n      startTime: null,\n      endTime: null,\n      measuredTime: undefined,\n    };\n  },\n  methods: {\n    startGame() {\n      setTimeout(() => {\n        this.toggleReactionField = true;\n        this.startTime = Date.now();\n      }, 1000);\n    },\n    checkReaction() {\n      this.endTime = Date.now();\n      this.measuredTime = `Reaction Time: ${this.endTime - this.startTime} ms`;\n      this.toggleReactionField = false;\n    },\n    evaluationMessage() {\n      return \"snail\";\n    },\n  },\n  components: {\n    ButtonComp,\n    ScoreScreen,\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"],"mappings":"AAsBA,OAAOA,UAAS,MAAO,6BAA6B;AACpD,OAAOC,WAAU,MAAO,8BAA8B;AAEtD,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,mBAAmB,EAAE,KAAK;MAC1BC,SAAS,EAAE,IAAI;MACfC,OAAO,EAAE,IAAI;MACbC,YAAY,EAAEC;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,SAASA,CAAA,EAAG;MACVC,UAAU,CAAC,MAAM;QACf,IAAI,CAACP,mBAAkB,GAAI,IAAI;QAC/B,IAAI,CAACC,SAAQ,GAAIO,IAAI,CAACC,GAAG,CAAC,CAAC;MAC7B,CAAC,EAAE,IAAI,CAAC;IACV,CAAC;IACDC,aAAaA,CAAA,EAAG;MACd,IAAI,CAACR,OAAM,GAAIM,IAAI,CAACC,GAAG,CAAC,CAAC;MACzB,IAAI,CAACN,YAAW,GAAK,kBAAiB,IAAI,CAACD,OAAM,GAAI,IAAI,CAACD,SAAS,KAAK;MACxE,IAAI,CAACD,mBAAkB,GAAI,KAAK;IAClC,CAAC;IACDW,iBAAiBA,CAAA,EAAG;MAClB,OAAO,OAAO;IAChB;EACF,CAAC;EACDC,UAAU,EAAE;IACVhB,UAAU;IACVC;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}